@startuml
package "StorageManagment" #DDDDDD{  /'songole tipologie elementi'/
class ItemFactory
{
  ItemStack getRandomItem();
  ItemStack getItem(ItemType t);
  ItemStack getItem(ItemType t, byte valore);
  ItemStack getItem(ItemType t, byte valore, byte peso);
}

class LoaderItem{
  LoaderItem(String file);
  public HashMap<ItemType, ItemStack> loadItems();
}

class ItemStack {
  String name;
  byte weight;
  byte quantity;
  byte value;
  ItemType type;   
  String description;
   
  byte getQuanity();
  void addQuantity();
  byte getPeso();
  byte getValue();
  ItemType getType();
  String getName();

  void addQuantity();
  boolean removeQuantity();
  String showDescription();

  boolean equals(Object);
  ItemStack clone();
}

enum ItemType{
  ARMA
  ARMATURA
  POZIONE_CURA
  POZIONE_DANNO
  POZIONE_FORZA
  POZIONE_RESISTENZA
  POZIONE_VELENO
  POZIONE_INVALIDITA
  CIBO
  EASTER_EGG
}

/'gestione di infiniti item'/
abstract Storage{   
  List<ItemStack> items = new ArrayList<ItemStack>;

  boolean add(ItemStack i);
  boolean remove(ItemStack i);

  List<ItemStack> showStorage();
  byte quantityOf(ItemType t);
  ItemStack searchFor(ItemType t);
  ItemStack searchFor(String name);

  String toString();
}
note left of Storage::"searchFor(String name)"
shallow copy, evita di influenzare elementi interni
?esiste modo per fare un final per il chiamante
end note

class Inventario{
  byte weight;
  byte getTotalWeight();
}

class Chest{
  boolean lock;
  
  void lock();
  void unlock()
  boolean getLock();

}

}
Storage -> ItemStack 
Inventario --|> Storage

Chest --|> Storage
ItemStack -> ItemType




package PersistaceLayer #DDDDDD{
  class awsClient{
    void upload(File f);
    void download(String file);
    String getChecksum(String file);  
  }

  class JsonParser{
    
  }
  
}

package AdapterLayer #DDDDDD{
  class AdapterSave{
    boolean checkOldSave(File f);
    File loadSave(); /'file'/
  }
}
@enduml
