
/'organizzatore e gestore degli eventi del gioco'/
class GameEngine{
  final byte MAX_POTION_USAGE = 3;
  final float PROBABILITY_ATTACK_MISTAKE = 0.2f;
  Player p;
  MapGraph map;
  String buffer;
  byte level;
  boolean lose;
  Map<ItemType, Byte> potionsActiveted;
  Stack<Coordinates> playerStack;
  static boolean enableFormatted;

  /'metodo per l'inizializzazione(di player e mappa)'/
  void runSetup(String playerName);
  MapGraph getMap();
  Player getPlayer();
  void loadPlayer(Player newPlayer);
  void loadMap(MapGraph newMap);
  
  /'metodi privati'/
  private String format(String str, String colorTAG);
  private String getRoomInfo(Coordinates c);
  private String getNearDirection(Coordinates c);
  private boolean throwRandomCoin(float val);
  private byte getPotionValue(ItemType t);
  private ItemType getPotion(ItemStack item);
  private void applayPotion(ItemStack item);
  private short playerAttack(Monster m);
  private short monsterAttack(Monster m);


  /'metodo richiamati durante il gioco '/
  void lookAround();
  boolean playerIsAlive();
  void attack();
  boolean playerCanAttack();
  void movePlayerBack();
  void movePlayer(Direction d);
  boolean canPlayerGo(Direction d);
  boolean canPlayerTake(String item);
  void playerTake(String item);
  boolean playerHave(String item);
  void playerUse(String item);
  void playerRemove(String item);        /'aggiunge nel buffer una info degli oggetti eliminati'/
  void playerRemoveStack(String items);/'toglie tutto lo stack di item'/
  

  /'metodi usati per aggiornare la grafica'/
  String getPlayerInv();
  short getPlayerMaxLife();
  byte getPlayerLife();
  byte getPlayerLv();
  short getMonsterMaxLife();
  byte getMonsterLife();
  String getBuffer();
  boolean isPlayerInRoom();
  void addBuffer(String str);
  void reset();
  Coordinates getPlayerCord();
  byte getPlayerMaxWeight();
  byte getPlayerWeight();
}


class Game{
public void main();
}

class GameFrame{
JButton jButtonInvio;
JProgressBar jBarPeso;
JProgressBar jBarVitaNemico;
JProgressBar jBarVitaPlayer;
JButton jButtonInvio;
JLabel jLabelNemico;        
JLabel jLabelPeso; 
JLabel jLabelMap;
JLabel jLabelVita;    
JRadioButton jButtonPlayer;
JTextField jTextComandi;
JTextArea jTextStory;
MyRoundButton JButtonMusic;
final int numberRows;
final int numberCols; 
final String pathOfTheImages;

public void remove[Add]Player[Enemy]Bar(){}
public void initComonents(){}
public void WriteOnConsole(String t){}
public void setPeso(int x){}
public void getPeso(){}
public void setVita(int x){}
public void getVita(){}
public void setVitaNemico(int x){}
public void getVitaNemico(){}
public void move(Coordinates c){}
public void setDragon(){}
}


class MyRoundButton
{
protected void paintBorder(Graphics g){}
protected void paintComponent(Graphics g){}
public boolean contains(int x, int y){}
public void actionPerformed(ActionEvent e){}
public void playMusic(){}
public void pauseMusic(){}
}
GameFrame--MyRoundButton
note top of MyRoundButton: Extends JButton